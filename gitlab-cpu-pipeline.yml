default:
    tags:
        - 10core-docker-runner
    image:
        name: $CI_REGISTRY_USER/$cpu_image_name:$cpu_image_version
        entrypoint: [""]

stages:
    - pre_build
    - build 
    - test

fetch_submodules:
    stage: pre_build
    variables:
        GIT_STRATEGY: clone
    before_script:
        - git branch -vva
        - echo $commit_author_name
    script:
        - git submodule init
        - sed -i 's/\.\.\/\.\./https\:\/\/github\.com/g' .gitmodules
        - git submodule sync
        - git submodule update --init --recursive
    artifacts:
        paths:
            - submodules
        
build_seissol:
    stage: build
    needs:
        - job: fetch_submodules
    parallel:
        matrix:
        - precision: [double, single]
    script:
        - cmake --version
        - equation=elastic
        - mechanisms=0
        - for build_type in Debug Release ; 
             do for equation in elastic ;
                 do dirname="build_${equation}_${precision}_${build_type}";
                 echo "mkdir $dirname";
                 if [ "$equation" = viscoelastic2 ]; then mechanisms=3; else mechanisms=0; fi;
                 mkdir -p $dirname && cd $dirname ;
                 pwd; 
                 CMAKE_PREFIX_PATH=~ ;
                 cmake ..
                 -DNETCDF=OFF
                 -DMETIS=ON
                 -DCOMMTHREAD=ON
                 -DASAGI=OFF
                 -DHDF5=ON
                 -DCMAKE_BUILD_TYPE=$build_type
                 -DTESTING=ON
                 -DLOG_LEVEL=warning
                 -DLOG_LEVEL_MASTER=info
                 -DHOST_ARCH=hsw
                 -DPRECISION=$precision
                 -DEQUATIONS=$equation
                 -DNUMBER_OF_MECHANISMS=$mechanisms
                 -DGEMM_TOOLS_LIST=LIBXSMM .. ;
                 make -j $(nproc);
                 cd .. ; 
             done; 
          done;
          
    artifacts:
        paths:
            - build_*
            
run_unit_tests:
    stage: test
    allow_failure: true
    needs:
        - job: build_seissol
    parallel:
        matrix:
            - DIR: build_elastic_double_Debug
            - DIR: build_elastic_single_Debug
            - DIR: build_elastic_double_Release
            - DIR: build_elastic_single_Release
    script: 
        - echo "testing"
        - pwd
        - ls
        - cd $DIR
        - export CTEST_OUTPUT_ON_FAILURE=1
        - make test
