diff --git a/src/Geometry/PUMLReader.cpp b/src/Geometry/PUMLReader.cpp
index 23e5379a..ba0115f7 100644
--- a/src/Geometry/PUMLReader.cpp
+++ b/src/Geometry/PUMLReader.cpp
@@ -313,8 +313,8 @@ void seissol::PUMLReader::getMesh(const PUML::TETPUML &puml)
 	const std::vector<PUML::TETPUML::face_t> &faces = puml.faces();
 	const std::vector<PUML::TETPUML::vertex_t> &vertices = puml.vertices();
 
-	const int* material = puml.cellData(0);
-	const int* boundaryCond = puml.cellData(1);
+	const int64_t* material = puml.cellData(0);
+	const int64_t* boundaryCond = puml.cellData(1);
 
 	std::unordered_map<int, std::vector<unsigned int> > neighborInfo; // List of shared local face ids
 
@@ -369,8 +369,8 @@ void seissol::PUMLReader::getMesh(const PUML::TETPUML &puml)
 				m_elements[i].neighborRanks[FACE_PUML2SEISSOL[j]] = rank;
 			}
 
-			int bcCurrentFace = (boundaryCond[i] >> (j*8)) & 0xFF;
-			int faultTag = bcCurrentFace;
+			int64_t bcCurrentFace = (boundaryCond[i] >> (j*16)) & 0xFFFF;
+			int64_t faultTag = bcCurrentFace;
 			if (bcCurrentFace > 64) {
 				bcCurrentFace = 3;
 			}
@@ -379,7 +379,7 @@ void seissol::PUMLReader::getMesh(const PUML::TETPUML &puml)
 			m_elements[i].mpiIndices[FACE_PUML2SEISSOL[j]] = 0;
 		}
 
-		m_elements[i].material = material[i];
+		m_elements[i].material = static_cast<int>(material[i]);
 	}
 
 	// Exchange ghost layer information and generate neighbor list
diff --git a/src/Initializer/ParameterDB.cpp b/src/Initializer/ParameterDB.cpp
index 18529caa..326b95d1 100644
--- a/src/Initializer/ParameterDB.cpp
+++ b/src/Initializer/ParameterDB.cpp
@@ -85,7 +85,7 @@ easi::Query seissol::initializers::ElementBarycentreGeneratorPUML::generate() co
   std::vector<PUML::TETPUML::cell_t> const& cells = m_mesh.cells();
   std::vector<PUML::TETPUML::vertex_t> const& vertices = m_mesh.vertices();
 
-  int const* material = m_mesh.cellData(0);
+  int64_t const* material = m_mesh.cellData(0);
   
   easi::Query query(cells.size(), 3);
   for (unsigned cell = 0; cell < cells.size(); ++cell) {
@@ -105,7 +105,7 @@ easi::Query seissol::initializers::ElementBarycentreGeneratorPUML::generate() co
       query.x(cell,dim) *= 0.25;
     }
     // Group
-    query.group(cell) = material[cell];
+    query.group(cell) = static_cast<int>(material[cell]);
   }
   return query;
 }
diff --git a/src/Initializer/time_stepping/LtsWeights/LtsWeights.cpp b/src/Initializer/time_stepping/LtsWeights/LtsWeights.cpp
index ddc9b856..cfcd6b67 100644
--- a/src/Initializer/time_stepping/LtsWeights/LtsWeights.cpp
+++ b/src/Initializer/time_stepping/LtsWeights/LtsWeights.cpp
@@ -152,8 +152,8 @@ int LtsWeights::getCluster(double timestep, double globalMinTimestep, unsigned r
   return cluster;
 }
 
-int LtsWeights::getBoundaryCondition(int const *boundaryCond, unsigned cell, unsigned face) {
-  int bcCurrentFace = ((boundaryCond[cell] >> (face * 8)) & 0xFF);
+int LtsWeights::getBoundaryCondition(int64_t const *boundaryCond, unsigned cell, unsigned face) {
+  int bcCurrentFace = ((boundaryCond[cell] >> (face * 16)) & 0xFFFF);
   if (bcCurrentFace > 64) {
     bcCurrentFace = 3;
   }
@@ -227,7 +227,7 @@ std::vector<int> LtsWeights::computeCostsPerTimestep() {
   const auto &cells = m_mesh->cells();
 
   std::vector<int> cellCosts(cells.size());
-  int const *boundaryCond = m_mesh->cellData(1);
+  int64_t const *boundaryCond = m_mesh->cellData(1);
   for (unsigned cell = 0; cell < cells.size(); ++cell) {
     int dynamicRupture = 0;
     int freeSurfaceWithGravity = 0;
@@ -269,7 +269,7 @@ int LtsWeights::enforceMaximumDifferenceLocal(int maxDifference) {
 
   std::vector<PUML::TETPUML::cell_t> const &cells = m_mesh->cells();
   std::vector<PUML::TETPUML::face_t> const &faces = m_mesh->faces();
-  int const *boundaryCond = m_mesh->cellData(1);
+  int64_t const *boundaryCond = m_mesh->cellData(1);
 
 #ifdef USE_MPI
   std::unordered_map<int, std::vector<int>> rankToSharedFaces;
@@ -377,4 +377,4 @@ int LtsWeights::enforceMaximumDifferenceLocal(int maxDifference) {
 
   return numberOfReductions;
 }
-} // namespace seissol::initializers::time_stepping
\ No newline at end of file
+} // namespace seissol::initializers::time_stepping
diff --git a/src/Initializer/time_stepping/LtsWeights/LtsWeights.h b/src/Initializer/time_stepping/LtsWeights/LtsWeights.h
index a3c65b5d..c3ebf0ab 100644
--- a/src/Initializer/time_stepping/LtsWeights/LtsWeights.h
+++ b/src/Initializer/time_stepping/LtsWeights/LtsWeights.h
@@ -86,7 +86,7 @@ protected:
   GlobalTimeStepDetails collectGlobalTimeStepDetails();
   void computeMaxTimesteps(std::vector<double> const &pWaveVel, std::vector<double> &timeSteps);
   int getCluster(double timestep, double globalMinTimestep, unsigned rate);
-  int getBoundaryCondition(int const *boundaryCond, unsigned cell, unsigned face);
+  int getBoundaryCondition(int64_t const *boundaryCond, unsigned cell, unsigned face);
   std::vector<int> computeClusterIds();
   int enforceMaximumDifference();
   int enforceMaximumDifferenceLocal(int maxDifference = 1);
diff --git a/submodules/PUML b/submodules/PUML
--- a/submodules/PUML
+++ b/submodules/PUML
@@ -1 +1 @@
-Subproject commit 57bfa7df18ab3610e66a5827a64dca6b28bd168b
+Subproject commit 57bfa7df18ab3610e66a5827a64dca6b28bd168b-dirty
