# SPDX-FileCopyrightText: 2024 SeisSol Group
#
# SPDX-License-Identifier: BSD-3-Clause
# SPDX-LicenseComments: Full text under /LICENSE and /LICENSES/
#
# SPDX-FileContributor: Author lists in /AUTHORS and /CITATION.cff

name: build-seissol-cpu
on:
  - push

env:
  precomputed-hash: 25f4852ff78ce5804304aa8015488c523df2eb06

jobs:
  seissol-build-test:
    name: seissol-build-test
    runs-on: ubuntu-24.04
    container: ${{ matrix.setup.container }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        order:
          - 6
        arch:
          - hsw
        build_type:
          - Release
          #- Debug
        equation:
          - acoustic
          - elastic
          - poroelastic
          - viscoelastic2
          - anisotropic
        precision:
          - single
          - double
        setup:
          - cc: gcc-13
            cxx: g++-13
            fc: gfortran-13
            container: seissol/gha-cpu:davschneller-gpu-image
          - cc: clang-19
            cxx: clang++-19
            fc: gfortran-13 # TODO?
            container: seissol/gha-cpu:davschneller-gpu-image
          - cc: icx
            cxx: icpx
            fc: ifx
            container: seissol/gha-gpu-intel:davschneller-gpu-image
          - cc: nvc
            cxx: nvc++
            fc: nvfortran
            container: seissol/gha-gpu-nvhpc:davschneller-gpu-image
    steps:
      - id: checkout
        name: checkout-seissol
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - id: build
        name: build-seissol
        run: |
          mkdir build && cd build
          if [ "${{ matrix.equation }}" = viscoelastic2 ]; then
              mechanisms=3
          else
              mechanisms=0
          fi

          # TODO: change to `-Wall -Werror` at some point
          EXTRA_FLAGS="-Wall"

          export CFLAGS="${EXTRA_FLAGS} ${CFLAGS}"
          export CXXFLAGS="${EXTRA_FLAGS} ${CXXFLAGS}"
          export FFLAGS="${EXTRA_FLAGS} ${FFLAGS}"

          export CC=${{matrix.setup.cc}}
          export CXX=${{matrix.setup.cxx}}
          export FC=${{matrix.setup.fc}}

          mkdir -p /opt/seissol

          if [ ${{matrix.setup.cc}} = nvc ]; then
            TESTING_COMMAND="mpirun -np 1 --oversubscribe --allow-run-as-root";
          else
            TESTING_COMMAND="";
          fi;

          cmake .. -GNinja -DTESTING_COMMAND="${TESTING_COMMAND}" -DCMAKE_INSTALL_PREFIX=/opt/seissol -DTESTING=ON -DASAGI=ON -DHOST_ARCH=${{matrix.arch}} -DORDER=${{matrix.order}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DEQUATIONS=${{matrix.equation}} -DPRECISION=${{matrix.precision}} -DNUMBER_OF_MECHANISMS=$mechanisms
          ninja install

      - name: test-seissol
        if: ${{ !cancelled() && steps.build.outcome == 'success' }}
        run: |
          cd build
          ctest -j --rerun-failed --output-on-failure
      
      - name: run-seissol-no-input
        if: ${{ !cancelled() && steps.build.outcome == 'success' }}
        run: |
          if [ "${{ matrix.precision }}" = single ]; then
              precision=s
          else
              precision=d
          fi
          if [ ${{matrix.setup.cc}} = nvc ]; then
            TESTING_COMMAND="mpirun -np 1 --oversubscribe --allow-run-as-root";
          else
            TESTING_COMMAND="";
          fi

          cd build
          set +e
          ${TESTING_COMMAND} ./SeisSol_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}}
          RETVAL_EXE=$?
          ./SeisSol_proxy_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}}
          RETVAL_PROXY=$?
          set -e

          if [ $RETVAL_EXE -ne 133 ]; then
            echo "Unexpected exit code for SeisSol: ${RETVAL_EXE}"
            exit 1
          fi
          if [ $RETVAL_PROXY -ne 255 ]; then
            echo "Unexpected exit code for the SeisSol Proxy: ${RETVAL_PROXY}"
            exit 1
          fi

          echo "Success!"

      - name: run-proxy
        if: ${{ !cancelled() && steps.build.outcome == 'success' }}
        run: |
          if [ "${{ matrix.precision }}" = single ]; then
              precision=s
          else
              precision=d
          fi
          cd build
          ./SeisSol_proxy_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}} 100 1 ader
          ./SeisSol_proxy_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}} 100 1 localwoader
          ./SeisSol_proxy_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}} 100 1 local
          ./SeisSol_proxy_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}} 100 1 neigh
          ./SeisSol_proxy_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}} 100 1 neigh_dr
          ./SeisSol_proxy_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}} 100 1 godunov_dr
          ./SeisSol_proxy_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.equation}} 100 1 all
  
      - name: upload-seissol
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && steps.build.outcome == 'success' }}
        with:
          name: seissol-${{matrix.build_type}}-${{matrix.precision}}-${{matrix.arch}}-${{matrix.order}}-${{matrix.equation}}-${{matrix.setup.cc}}
          path: /opt/seissol

  seissol-run-test:
    name: seissol-run-test
    runs-on: ubuntu-24.04
    container: ${{ matrix.setup.container }}
    continue-on-error: true
    needs: [seissol-build-test]
    if: ${{ github.repository == 'SeisSol/SeisSol' && github.ref_name == 'master' }}
    strategy:
      fail-fast: false
      matrix:
        case:
          - name: tpv5
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpv5-nuc
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpv5-visco
            equation: viscoelastic2
            energies: true
            receivers: true
            fault: true
          - name: tpv5-poro
            equation: poroelastic
            energies: true
            receivers: true
            fault: true
          - name: tpv6
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpv13
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpv16
            equation: elastic
            energies: true
            receivers: false # FIXME: do not work right now; disabled in the Gitlab CI
            fault: true
          #- name: tpv33
          #  equation: elastic
          #  energies: true
          #  receivers: true
          #  fault: true
          - name: tpv101
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpv101-slip
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpv104
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpv105
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpvahsp
            equation: anisotropic
            energies: false
            receivers: true
            fault: false
          - name: tpvgaussian
            equation: elastic
            energies: true
            receivers: true
            fault: true
          - name: tpvyoffe
            equation: elastic
            energies: true
            receivers: true
            fault: true
        precision:
          - single
          - double
        order:
          - 6
        arch:
          - hsw
        build_type:
          - Release
        setup:
          - cc: gcc-13
            cxx: g++-13
            fc: gfortran-13
            container: seissol/gha-cpu:davschneller-gpu-image
            pythonbreak: true
            mpi: openmpi
          - cc: clang-19
            cxx: clang++-19
            fc: gfortran-13 # TODO?
            container: seissol/gha-cpu:davschneller-gpu-image
            pythonbreak: true
            mpi: openmpi
          - cc: icx
            cxx: icpx
            fc: ifx
            container: seissol/gha-gpu-intel:davschneller-gpu-image
            pythonbreak: false
            mpi: intel
          - cc: nvc
            cxx: nvc++
            fc: nvfortran
            container: seissol/gha-gpu-nvhpc:davschneller-gpu-image
            pythonbreak: true
            mpi: openmpi
        parallel:
          - ranks: 1
            threads: 4
            commthread: false
          - ranks: 4
            threads: 1
            commthread: false
    steps:
      - name: install-packages
        run: |
          # circumvent problems with the Intel image still using Ubuntu 22.04

          if [ "${{ matrix.setup.pythonbreak }}" = true ]; then
            pip3 install --break-system-packages numpy>=1.12.0 lxml==5.0.0 setuptools seissolxdmf pandas
          else
            pip3 install numpy>=1.12.0 lxml==5.0.0 setuptools seissolxdmf pandas
          fi
      
      - id: get-precomputed-solutions
        name: get-precomputed-solutions
        uses: actions/checkout@v4
        with:
          repository: seissol/precomputed-seissol
          ref: ${{env.precomputed-hash}}
          path: precomputed
      - name: get-seissol
        uses: actions/download-artifact@v4
        with:
          name: seissol-${{matrix.build_type}}-${{matrix.precision}}-${{matrix.arch}}-${{matrix.order}}-${{matrix.case.equation}}-${{matrix.setup.cc}}
          path: install
      - name: run-seissol
        id: run
        run: |
          if [ "${{ matrix.precision }}" = single ]; then
              precision=s
          else
              precision=d
          fi

          if [ ${{matrix.setup.mpi}} = openmpi ]; then
            MPI_OPTIONS="--oversubscribe --allow-run-as-root -bind-to none";
          elif [ ${{matrix.setup.mpi}} = intel ]; then
            MPI_OPTIONS="";
          fi;

          export PATH=$(pwd)/install/bin:$PATH
          export LD_LIBRARY_PATH=$(pwd)/install/lib:$(pwd)/install/lib64:$LD_LIBRARY_PATH

          chmod +x $(pwd)/install/bin/*
          
          export OMP_NUM_THREADS=${{matrix.parallel.threads}}
          export SEISSOL_COMMTHREAD=${{matrix.parallel.commthread}}
          export SEISSOL_MINI_NUM_ELEMENTS=100

          cd precomputed/${{matrix.case.name}}
          
          mpirun ${MPI_OPTIONS} -np ${{matrix.parallel.ranks}} SeisSol_${{matrix.build_type}}_${precision}${{matrix.arch}}_${{matrix.order}}_${{matrix.case.equation}}

      # TODO: make this checkout obsolete
      - name: get-verification-scripts
        uses: actions/checkout@v4
        with:
          path: scripts
      
      # for now, compare faults only on single-rank setups
      - name: check-fault
        if: ${{ !cancelled() && steps.run.outcome == 'success' && matrix.case.fault && matrix.parallel.ranks == 1 }}
        run: |
          FAULT_FILE=tpv-fault.xdmf
          EPSILON=0.05

          cd precomputed/${{matrix.case.name}}
          python3 $GITHUB_WORKSPACE/scripts/postprocessing/validation/compare-faults.py ./output/${FAULT_FILE} ./precomputed/${{matrix.precision}}/${FAULT_FILE} --epsilon ${EPSILON}
      - name: check-receivers
        if: ${{ !cancelled() && steps.run.outcome == 'success' && matrix.case.receivers }}
        run: |
          EPSILON=0.05

          if [ ${{matrix.case.name}} = tpv5 ] || [ ${{matrix.case.name}} = tpv5-nuc ] || [ ${{matrix.case.name}} = tpv6 ] || [ ${{matrix.case.name}} = tpv16 ]; then
            MODE=lsw;
          elif [ ${{matrix.case.name}} = tpv105 ]; then
            MODE=tp;
          else
            MODE=rs;
          fi;

          cd precomputed/${{matrix.case.name}}
          python3 $GITHUB_WORKSPACE/scripts/postprocessing/validation/compare-receivers.py ./output ./precomputed/${{matrix.precision}} --epsilon ${EPSILON} --mode $MODE
      - name: check-energy
        if: ${{ !cancelled() && steps.run.outcome == 'success' && matrix.case.energies }}
        run: |
          ENERGY_FILE=tpv-energy.csv
          EPSILON=0.05

          cd precomputed/${{matrix.case.name}}
          python3 $GITHUB_WORKSPACE/scripts/postprocessing/validation/compare-energies.py ./output/${ENERGY_FILE} ./precomputed/${{matrix.precision}}/${ENERGY_FILE} --epsilon ${EPSILON}
