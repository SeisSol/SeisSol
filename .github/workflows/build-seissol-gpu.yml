# SPDX-FileCopyrightText: 2024 SeisSol Group
#
# SPDX-License-Identifier: BSD-3-Clause
# SPDX-LicenseComments: Full text under /LICENSE and /LICENSES/
#
# SPDX-FileContributor: Author lists in /AUTHORS and /CITATION.cff

name: build-seissol-gpu
on:
  - push

env:
  precomputed-hash: 4cc0993d4ba3b8f0aabc84af78e405af9d98f902

jobs:
  seissol-build-test:
    name: seissol-build-test<${{matrix.setup.cc}}, ${{matrix.setup.backend}}, ${{matrix.setup.arch}}, ${{matrix.build_type}}>
    runs-on: ubuntu-24.04
    container: ${{ matrix.setup.container }}
    continue-on-error: true
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        precision:
          - single
        arch:
          - hsw
        build_type:
          - Release
          #- Debug
        setup:
          - cc: gcc-13
            cxx: g++-13
            fc: gfortran-13
            container: seissol/gha-gpu-nv:davschneller-ci-merge
            arch: sm_60
            backend: cuda
          - cc: clang-18
            cxx: clang++-18
            fc: flang-18
            container: seissol/gha-gpu-nv:davschneller-ci-merge
            arch: sm_60
            backend: cuda
          - cc: gcc-13
            cxx: g++-13
            fc: gfortran-13
            container: seissol/gha-gpu-nv:davschneller-ci-merge
            arch: sm_60
            backend: acpp
          - cc: gcc-13
            cxx: g++-13
            fc: gfortran-13
            container: seissol/gha-gpu-amd:davschneller-ci-merge
            arch: gfx906
            backend: hip
          - cc: clang-18
            cxx: clang++-18
            fc: flang-18
            container: seissol/gha-gpu-amd:davschneller-ci-merge
            arch: gfx906
            backend: hip
          - cc: gcc-13
            cxx: g++-13
            fc: gfortran-13
            container: seissol/gha-gpu-amd:davschneller-ci-merge
            arch: gfx906
            backend: acpp
          - cc: icx
            cxx: icpx
            fc: ifx
            container: seissol/gha-gpu-intel-2025:davschneller-ci-merge
            mpi: intel
            arch: skl
            backend: oneapi
          - cc: nvc
            cxx: nvc++
            fc: nvfortran
            container: seissol/gha-gpu-nvhpc:davschneller-ci-merge
            arch: sm_60
            backend: cuda
    steps:
      - name: checkout-seissol
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - uses: ./.github/actions/cpu-build
        name: elastic-s-p6
        if: ${{ !cancelled() }}
        with:
          cfg-order: 6
          cfg-equation: elastic
          cfg-mechanisms: 0
          cfg-precision: single
          cfg-simulations: 1
          hostarch: ${{matrix.arch}}
          buildtype: ${{matrix.build_type}}
          cc: ${{matrix.setup.cc}}
          cxx: ${{matrix.setup.cxx}}
          fc: ${{matrix.setup.fc}}
          devicearch: ${{matrix.setup.arch}}
          devicebackend: ${{matrix.setup.backend}}
          tests: OFF

      - uses: ./.github/actions/cpu-build
        name: viscoelastic-3-s-p6
        if: ${{ !cancelled() }}
        with:
          cfg-order: 6
          cfg-equation: viscoelastic2
          cfg-mechanisms: 3
          cfg-precision: single
          cfg-simulations: 1
          hostarch: ${{matrix.arch}}
          buildtype: ${{matrix.build_type}}
          cc: ${{matrix.setup.cc}}
          cxx: ${{matrix.setup.cxx}}
          fc: ${{matrix.setup.fc}}
          devicearch: ${{matrix.setup.arch}}
          devicebackend: ${{matrix.setup.backend}}
          tests: OFF

      - uses: ./.github/actions/cpu-build
        name: anisotropic-s-p6
        if: ${{ !cancelled() }}
        with:
          cfg-order: 6
          cfg-equation: anisotropic
          cfg-mechanisms: 0
          cfg-precision: single
          cfg-simulations: 1
          hostarch: ${{matrix.arch}}
          buildtype: ${{matrix.build_type}}
          cc: ${{matrix.setup.cc}}
          cxx: ${{matrix.setup.cxx}}
          fc: ${{matrix.setup.fc}}
          devicearch: ${{matrix.setup.arch}}
          devicebackend: ${{matrix.setup.backend}}
          tests: OFF

      - uses: ./.github/actions/cpu-build
        name: acoustic-s-p6
        if: ${{ !cancelled() }}
        with:
          cfg-order: 6
          cfg-equation: acoustic
          cfg-mechanisms: 0
          cfg-precision: single
          cfg-simulations: 1
          hostarch: ${{matrix.arch}}
          buildtype: ${{matrix.build_type}}
          cc: ${{matrix.setup.cc}}
          cxx: ${{matrix.setup.cxx}}
          fc: ${{matrix.setup.fc}}
          devicearch: ${{matrix.setup.arch}}
          devicebackend: ${{matrix.setup.backend}}
          tests: OFF

      - uses: ./.github/actions/cpu-build
        name: elastic-s-p3-f32
        if: ${{ !cancelled() }}
        with:
          cfg-order: 3
          cfg-equation: elastic
          cfg-mechanisms: 0
          cfg-precision: single
          cfg-simulations: 32
          hostarch: ${{matrix.arch}}
          buildtype: ${{matrix.build_type}}
          cc: ${{matrix.setup.cc}}
          cxx: ${{matrix.setup.cxx}}
          fc: ${{matrix.setup.fc}}
          devicearch: ${{matrix.setup.arch}}
          devicebackend: ${{matrix.setup.backend}}
          tests: OFF

      - name: upload-seissol
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: seissol-${{matrix.build_type}}-${{matrix.precision}}-${{matrix.setup.arch}}-${{matrix.setup.backend}}-${{matrix.setup.cc}}
          path: /opt/seissol

  seissol-run-test:
    name: seissol-run-test
    runs-on: self-hosted
    container: ${{ matrix.setup.container }}
    continue-on-error: true
    needs: [seissol-build-test]
    if: ${{ github.repository == 'SeisSol/SeisSol' }}
    strategy:
      fail-fast: false
      matrix:
        precision:
          - single
        arch:
          - hsw
        build_type:
          - Release
        setup:
          - cc: gcc-13
            cxx: g++-13
            fc: gfortran-13
            container: seissol/gha-gpu-nv:davschneller-ci-merge
            arch: sm_60
            backend: cuda
            ompi: true
          - cc: nvc
            cxx: nvc++
            fc: nvfortran
            container: seissol/gha-gpu-nvhpc:davschneller-ci-merge
            arch: sm_60
            backend: cuda
            ompi: true
          - cc: icx
            cxx: icpx
            fc: ifx
            container: seissol/gha-gpu-intel-2025:davschneller-ci-merge
            arch: skl
            backend: oneapi
            ompi: false
        parallel:
          - ranks: 1
            threads: 32
            commthread: false
          - ranks: 4
            threads: 8
            commthread: false
    steps:
      - id: get-seissol
        name: get-seissol
        uses: actions/download-artifact@v5
        with:
          name: seissol-${{matrix.build_type}}-${{matrix.precision}}-${{matrix.setup.arch}}-${{matrix.setup.backend}}-${{matrix.setup.cc}}
          path: install

      - id: get-precomputed-solutions
        name: get-precomputed-solutions
        uses: actions/checkout@v5
        with:
          repository: seissol/precomputed-seissol
          ref: ${{env.precomputed-hash}}
          path: precomputed

      # TODO: make this checkout obsolete
      - name: get-verification-scripts
        uses: actions/checkout@v5
        with:
          path: scripts

      - name: tpv5/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv5
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv5-nuc/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv5-nuc
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv6/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv6
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv13/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv13
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv16/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv16
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv101/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv101
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: rs
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv101-slip/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv101-slip
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: rs
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv104/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv104
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: rs
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv105/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpv105
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: tp
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpvyoffe/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpvyoffe
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: tp
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpvgaussian/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: tpvgaussian
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: tp
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: ttpv1/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p6
          rundir: ttpv1
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv5-visco/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-viscoelastic2-s-p6
          rundir: tpv5-visco
          resultdir: single
          compare-volume: true
          compare-fault: true
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpvahsp/single
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-anisotropic-s-p6
          rundir: tpvahsp
          resultdir: single
          compare-volume: true
          compare-fault: false
          compare-surface: false
          compare-energy: false
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpvloh1-fused/single # (temporary)
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p3-f32
          rundir: tpvloh1-fused
          resultdir: single
          compare-volume: false
          compare-fault: false
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv13-fused/single # (temporary)
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p3-f32
          rundir: tpv13-fused
          resultdir: single
          compare-volume: false
          compare-fault: false
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}

      - name: tpv13-fused-plasticity/single # (temporary)
        uses: ./.github/actions/test
        if: ${{ !cancelled() && steps.get-seissol.outcome == 'success' }}
        with:
          seissol: gpu-elastic-s-p3-f32
          rundir: tpv13-fused-plasticity
          resultdir: single
          compare-volume: false
          compare-fault: false
          compare-surface: false
          compare-energy: true
          compare-receiver: true
          compare-receiver-mode: lsw
          commsize: ${{matrix.parallel.ranks}}
          rankthreads: ${{matrix.parallel.threads}}
          ompi: ${{matrix.setup.ompi}}
