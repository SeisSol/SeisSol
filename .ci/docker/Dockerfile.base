FROM ravilmobile/seissol-compilers:gcc-8_cuda-10


RUN apt-get update -yqq && \
apt-get install -yqq autotools-dev autoconf libtool \
libnuma-dev libnuma1 \
flex libopenblas-dev bzip2 python-pip \
vim gdb vim && \
pip install scons==3.1.0 && \
pip3 install numpy scons==3.1.0 


WORKDIR /tmp


# Install hwloc
RUN export VERSION=2.2.0 && \
wget --progress=bar:force:noscroll http://www.open-mpi.org/software/hwloc/v2.2/downloads/hwloc-${VERSION}.tar.gz && \
tar -xvf ./hwloc-${VERSION}.tar.gz && cd hwloc-${VERSION} && \
./configure --prefix=/usr \
--disable-opencl \
--disable-cairo \
--disable-nvml \
--disable-gl \
--disable-cuda \
--disable-libudev \
--enable-shared && \
make -j && make install && cd .. && rm -rf ./hwloc*


# Install OpenMPI
RUN export VERSION=4.0.1 && \
wget --progress=bar:force:noscroll https://github.com/open-mpi/ompi/archive/refs/tags/v${VERSION}.tar.gz && \
tar -xvf ./v${VERSION}.tar.gz && cd ./ompi-${VERSION} && \
./autogen.pl && mkdir ./build && cd ./build && \
../configure \
--prefix=/usr \
--with-memory-manager=none \
--enable-static=yes \
--enable-shared \
--with-hwloc=/usr \
--enable-mpirun-prefix-by-default \
--with-cuda=/usr/local/cuda && \
make -j && make install && cd ../.. && rm -rf ./ompi* && rm -rf ./v*


RUN export VERSION=1.10.7 && \
wget --progress=bar:force:noscroll https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-${VERSION}/src/hdf5-${VERSION}.tar.bz2 && \ 
tar -xvf hdf5-${VERSION}.tar.bz2 && cd hdf5-${VERSION} && \ 
CFLAGS="-fPIC" CC=mpicc FC=mpif90 ./configure \
--enable-parallel \
--with-zlib \
--disable-shared \
--enable-fortran \
--prefix=/usr && \ 
make -j4 && make install && \
cd .. && rm -rf ./hdf5*


RUN export VERSION=4.7.4 && \
wget --progress=bar:force:noscroll ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-c-${VERSION}.tar.gz && \
tar -xvf netcdf-c-${VERSION}.tar.gz && \
cd netcdf-c-${VERSION} && \
CFLAGS="-fPIC" CC=/usr/bin/h5pcc ./configure --enable-shared=no --prefix=/usr --disable-dap && \
make -j4 && make install && \
cd .. && rm -rf ./netcdf-c*


RUN export VERSION=4.0.3 && \
wget http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-${VERSION}.tar.gz && \
tar -xvf parmetis-${VERSION}.tar.gz && \
cd parmetis-${VERSION} && \
sed -i 's/IDXTYPEWIDTH 32/IDXTYPEWIDTH 64/g'  ./metis/include/metis.h && \
CC=mpicc CXX=mpicxx make config prefix=/usr && \
make -j4 && make install && \
cp build/Linux-x86_64/libmetis/libmetis.a /usr/lib && \
cp metis/include/metis.h /usr/include && \ 
cd .. && rm -rf ./parmetis-*


RUN export VERSION=1.16.1 && \
git clone https://github.com/hfp/libxsmm.git && \
cd libxsmm && \
git checkout ${VERSION} && \
make -j4 generator && \
cp bin/libxsmm_gemm_generator /usr/bin && \
cd .. && rm -rf ./libxsmm*


RUN export VERSION=4.9.3 && \ 
git clone https://github.com/OSGeo/PROJ.git && \
cd PROJ && git checkout ${VERSION} && \
mkdir build && cd build && \
CC=mpicc CXX=mpicxx cmake .. -DCMAKE_INSTALL_PREFIX=/usr && \
make -j4 && make install && \
cd ../.. && rm -rf ./PROJ*


RUN git clone https://github.com/SCOREC/core.git && \
cd core && \
git checkout v2.2.6 && \
mkdir -p ./build && cd ./build && \
cmake .. -DCMAKE_INSTALL_PREFIX=/usr \
-DCMAKE_C_COMPILER=mpicc \
-DCMAKE_CXX_COMPILER=mpicxx \
-DCMAKE_BUILD_TYPE=Release \
-DSCOREC_CXX_FLAGS="-Wno-error=array-bounds" && \
make -j4 && make install && \
cd ../.. && rm -rf ./core


RUN git clone --recurse-submodules https://github.com/SeisSol/PUMGen.git pumgen && \
mkdir -p ./pumgen/build && cd ./pumgen/build && \
cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_BUILD_TYPE=Release && \
make -j4 && make install && \
cd ../.. && rm -rf ./pumgen


RUN git clone --recurse-submodules https://github.com/SeisSol/SeisSol.git seissol && \
DIR=./seissol/preprocessing/meshing/cube_c/build && \
mkdir -p $DIR && cd $DIR && \
CC=mpicc CXX=mpicxx cmake .. && make -j4 && \
cp ./cubeGenerator /usr/bin && \
cd .. && rm -rf ./build


RUN DIR=./seissol/preprocessing/meshing/gmsh2gambit && \
mkdir -p $DIR && cd $DIR && \
CC=gcc CXX=g++ scons && \
cp ./build/bin/gmsh2gambit /usr/bin && \ 
rm -rf ./build


RUN DIR=./seissol/preprocessing/science/rconv/build && \
mkdir -p $DIR && cd $DIR && \
echo "find_package(HDF5 REQUIRED COMPONENTS C HL)" >> ../CMakeLists.txt && \
echo "target_link_libraries(SeisSol-rconv PUBLIC \${HDF5_C_HL_LIBRARIES} \${HDF5_C_LIBRARIES})" >> ../CMakeLists.txt && \
CC=mpicc CXX=mpicxx cmake .. && make && \
cp ./rconv /usr/bin && \
cd /tmp && rm -rf ./seissol


RUN export VERSION=2.6.2 && \
apt install -yqq libjpeg-dev && \
apt install -yqq locales && locale-gen en_US.UTF-8 && \
pip3 install pytest==6.2.5 && \
wget --progress=bar:force:noscroll https://github.com/pybind/pybind11/archive/v${VERSION}.tar.gz && \
tar -xvf ./v${VERSION}.tar.gz && \
cd ./pybind11-${VERSION} && mkdir build && cd build && \
PYBIND11_USE_CMAKE=1 cmake .. -DPYTHON_EXECUTABLE=$(which python3) && \
make -j3 && make install && cd .. && \
LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8' python3 ./setup.py install && \
cd .. && rm -rf ./pybind11-${VERSION} ./v${VERSION}.tar.gz


RUN export VERSION=0.6.2 && \
git clone --depth 1 --branch yaml-cpp-${VERSION} https://github.com/jbeder/yaml-cpp.git yaml-cpp && \
mkdir -p yaml-cpp/build && cd yaml-cpp/build && \
cmake .. -DCMAKE_CXX_FLAGS="-fPIC" && \
make -j4 && make install && \
cd ../.. && rm -rf ./yaml-cpp


# Clean-up
RUN apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*


WORKDIR /
