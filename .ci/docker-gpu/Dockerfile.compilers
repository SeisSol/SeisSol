FROM nvidia/cuda:10.2-devel-ubuntu18.04


RUN apt-get update -yqq && \
apt-get install -yqq software-properties-common apt-utils build-essential wget git curl && \
apt-get install -yqq pkg-config tree && \
apt-get install -yqq python3 python3-dev python3-pip && \
pip3 install pylint pep8 flake8


# Install GCC compilers
RUN add-apt-repository ppa:ubuntu-toolchain-r/test && \
apt-get install -yqq gcc-8 g++-8 gfortran-8 && \
apt-get install -yqq gcc-9 g++-9 gfortran-9 && \
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 && \
update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100 && \
update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-8 100


# Install cmake
RUN export VERSION=3.20.0 && \
wget --progress=bar:force:noscroll https://github.com/Kitware/CMake/releases/download/v${VERSION}/cmake-${VERSION}-Linux-x86_64.sh && \
chmod +x ./cmake-${VERSION}-Linux-x86_64.sh && \
./cmake-${VERSION}-Linux-x86_64.sh --skip-license --prefix=/usr && \
rm ./cmake-${VERSION}-Linux-x86_64.sh && \
cmake --version


# Install yaml-cpp
RUN export VERSION=0.6.2 && \
git clone --depth 1 --branch yaml-cpp-${VERSION} https://github.com/jbeder/yaml-cpp.git && \
mkdir -p yaml-cpp/build && cd yaml-cpp/build && \
cmake .. -DCMAKE_BUILD_TYPE=Release \
-DCMAKE_INSTALL_PREFIX=/usr/local \
-DBUILD_SHARED_LIBS=ON \
-DCMAKE_POSITION_INDEPENDENT_CODE=ON \
-DYAML_CPP_BUILD_TESTS=OFF && \
make -j $(nproc) && \
make install && \
cd ../.. && rm -rf ./yaml-cpp


# Install googletest
RUN export VERSION=1.10.0 && \
git clone --depth 1 --branch release-${VERSION} https://github.com/google/googletest && \
mkdir -p googletest/build && cd googletest/build && \
cmake .. -DBUILD_GTEST=ON -DBUILD_GMOCK=ON -Dgtest_disable_pthreads=ON -DBUILD_SHARED_LIBS=ON && \
make -j $(nproc) && \
make install && \
cd ../.. && rm -rf ./googletest


# Install ROCm 4.2
RUN export VERSION=4.2 && \
apt-get install -yqq libnuma-dev gnupg2 && \
curl -sL http://repo.radeon.com/rocm/rocm.gpg.key | apt-key add - && \
sh -c 'echo deb [arch=amd64] http://repo.radeon.com/rocm/apt/${VERSION}/ ubuntu main > /etc/apt/sources.list.d/rocm.list' && \
apt-get update -yqq && \
apt-get install -y rocm-dev && \
echo 'export PATH=$PATH:/opt/rocm/bin:/opt/rocm/rocprofiler/bin:/opt/rocm/opencl/bin' | tee -a /etc/profile.d/rocm.sh && \
echo 'export HIPCC_VERBOSE=7' | tee -a /etc/profile.d/rocm.sh && \
echo 'export HIP_PLATFORM=nvidia' | tee -a /etc/profile.d/rocm.sh


# Install boost
RUN export VERSION=1_69_0 && \
DOT_VERSION=$(echo $VERSION | sed 's/\([0-9]*\)_\([0-9]*\)_\([0-9]*\)/\1\.\2\.\3/') && \
wget --progress=bar:force:noscroll https://boostorg.jfrog.io/artifactory/main/release/${DOT_VERSION}/source/boost_${VERSION}.tar.gz && \
tar -xvf ./boost_${VERSION}.tar.gz && \
cd boost_${VERSION} && \
./bootstrap.sh --prefix=/usr/local --with-toolset=gcc --with-libraries=serialization,wave,date_time,iostreams,locale,math,random,context,regex,program_options,atomic,timer,log,fiber,chrono,thread,exception,system,test,graph,filesystem && \
echo "using gcc : : /usr/bin/g++-9 ;" > user-config.jam && \
./b2 --clean && \
./b2 install threading=multi variant=release toolset=gcc link=shared cxxflags="-std=c++17" visibility=hidden address-model=64 architecture=x86 -j $(nproc) --user-config="user-config.jam" && \
cd ../ && rm -rf ./boost*


# Install llvm and clang
RUN export VERSION=11.0.1 && \
git clone --depth 1 --branch llvmorg-${VERSION} https://github.com/llvm/llvm-project.git && \
mkdir -p llvm-project/build && cd llvm-project/build && \
CC=/usr/bin/gcc-9 CXX=/usr/bin/g++-9 cmake ../llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS=clang -DGCC_INSTALL_PREFIX=/usr && \
make -j $(nproc) && \
make install && \
cd ../../ && rm -rf ./llvm-project


# Install hipsycl
RUN export VERSION=0.9.1 && \
apt install -yqq libomp-dev && \
git clone --depth 1 --branch v${VERSION} https://github.com/illuhad/hipSYCL.git hipsycl && \
cd hipsycl && \
git submodule update --init --recursive && \
mkdir build && cd build && \
CC=/usr/bin/gcc-9 CXX=/usr/bin/g++-9 cmake .. \
-DCMAKE_BUILD_TYPE:STRING=Release \
-DCMAKE_INSTALL_PREFIX=/usr/local \
-DWITH_CPU_BACKEND:Bool=TRUE \
-DWITH_ROCM_BACKEND:Bool=FALSE \
-DWITH_CUDA_BACKEND:Bool=TRUE \
-DLLVM_DIR:String=/usr/local/lib/cmake/llvm \
-DCLANG_INCLUDE_PATH:String=/usr/local/lib/clang/11.0.1/include \
-DCLANG_EXECUTABLE_PATH:String=/usr/local/bin/clang++ \
-DCUDA_TOOLKIT_ROOT_DIR:String=/usr/local/cuda && \
make -j $(nproc) && make install && cd ../.. && rm -rf ./hipsycl


# Clean-up
RUN apt-get clean &&   rm -rf /var/lib/apt/lists/*
